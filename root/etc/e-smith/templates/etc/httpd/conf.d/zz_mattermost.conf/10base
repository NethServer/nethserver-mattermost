<VirtualHost *:80>
    IncludeOptional conf.d/default-virtualhost.inc
</VirtualHost>

<VirtualHost *:80>
   ServerName {{$mattermost{'VirtualHost'} || 'mattermost.'.$DomainName}}
   RedirectMatch 301 ^(?!/\.well-known/acme-challenge/).* https://{{$mattermost{'VirtualHost'} || 'mattermost.'.$DomainName}}
</VirtualHost>

<VirtualHost *:443>
  ServerName {{$mattermost{'VirtualHost'} || 'mattermost.'.$DomainName}}

  SSLEngine on
  SSLCertificateFile /etc/pki/tls/certs/localhost.crt
  SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
  { ($pki{ChainFile} && -e $pki{ChainFile})? '' : '# '}SSLCertificateChainFile { $pki{ChainFile} }

{
  my $tlsPolicy = $tls{'policy'} || '0';
  my $cipherSuite = $httpd{SSLCipherSuite} || '';

  if ($tlsPolicy >= 20180330) {
     $OUT .= qq(
  # cipher selection 2018-03-30
  SSLProtocol all -SSLv2 -SSLv3

  SSLCipherSuite EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA

  SSLHonorCipherOrder on
  SSLCompression Off
);
  } else {
    if ($cipherSuite ne '') {
      $OUT .= "  # cipher selection 2017-10-26 (Legacy)\n";
      $OUT .= "  SSLCipherSuite $cipherSuite\n";
    } else {
      $OUT .=   "SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA\n";
    }

  }
}


  ProxyPreserveHost On

  # setup the proxy
  <Proxy *>
         Order allow,deny
         Allow from all
  </Proxy>

  # Set web sockets
  RewriteEngine On
  RewriteCond %\{REQUEST_URI\} /api/v[0-9]+/(users/)?websocket [NC,OR]
  RewriteCond %\{HTTP:UPGRADE\} ^WebSocket$ [NC,OR]
  RewriteCond %\{HTTP:CONNECTION\} ^Upgrade$ [NC]
  RewriteRule .* ws://127.0.0.1:8065%\{REQUEST_URI\} [P,QSA,L]
  RewriteCond %\{DOCUMENT_ROOT\}/%\{REQUEST_FILENAME\} !-f

  # Force SSL redirect
  RewriteCond %\{HTTPS\} !=on
  RewriteRule (.*) https://%\{SERVER_NAME\}%\{REQUEST_URI\} [END,QSA,R=permanent]

  <LocationMatch "^/api/v(?<apiversion>[0-9]+)/(?<apiusers>users/)?websocket">
        Require all granted
        ProxyPass ws://127.0.0.1:8065/api/v%\{env:MATCH_APIVERSION\}/%\{env:MATCH_APIUSERS\}websocket
        ProxyPassReverse ws://127.0.0.1:8065/api/v%\{env:MATCH_APIVERSION\}/%\{env:MATCH_APIUSERS\}websocket
        ProxyPassReverseCookieDomain 127.0.0.1 {{$mattermost{'VirtualHost'} || 'mattermost.local'}}
  </LocationMatch>

  <Location />
        Require all granted
        ProxyPass http://127.0.0.1:8065/
        ProxyPassReverse http://127.0.0.1:8065/
        ProxyPassReverseCookieDomain 127.0.0.1 {{$mattermost{'VirtualHost'} || 'mattermost.local'}}
  </Location>

</VirtualHost>


